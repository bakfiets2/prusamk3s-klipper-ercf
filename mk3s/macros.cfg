[homing_override]
gcode:
  SENSORLESS_HOME_X
  SENSORLESS_HOME_y
  G28 Z

[gcode_macro G80]
gcode:
 #G28 #Avoid double homing if using PrusaSlicer or other default gcode.
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z0.4 F4000

[gcode_macro G81]
gcode:
 BED_MESH_OUTPUT

#Load and Unload Macros.
[respond]
default_type: command

[pause_resume]

[gcode_macro START_PRINT] 
gcode:
    #Get Bed and Extruder temperature from Slicer GCode
    #{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    #{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}    
    # Loed bed MESH
    BED_MESH_PROFILE LOAD="default"
    #Preheat nozzle and bed
    M104 S{EXTRUDER_TEMP}                      
    M140 S{BED_TEMP}
    #Heat nozzle and bed
    M190 S{BED_TEMP}                               
    M109 S{EXTRUDER_TEMP}
    # Use absolute coordinates
    G90
    M83
    # Home the printer
    G28

[gcode_macro _PURGE_LINE]
gcode:

    M117 Start purge line
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.2 F300
    # go outside print area
    G1 Y-1 F1000
    G1 Z0.4 F1000
    # initial load
    G1 X55 E29 F1073
    G1 X16 E29 F1800
    G1 X55 E8 F2000
    G1 Z0.3 F1000
    G1 X240 E25 F2200
    G1 Y0 F1000
    G1 X55 E30 F1400
    G1 Z0.2 F1000
    M117

[gcode_macro END_PRINT]
gcode:
  G91
  G1 X20 Z1 E-5 f6000  
  G90
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 20.0) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  ERCF_EJECT
  TURN_OFF_HEATERS
  M106 S0
  CLEAR_PAUSE
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
  M117 Print finished
  
#This replicates Prusa's calibrate Z funtionality.
[gcode_macro Tram_Z]
gcode:
    M117 Home all...
    G28
    G1 X105 Y105 F3000
    M117 Moving to top...
    G1 Z208 F1000 #Update with Z height.
    FORCE_MOVE STEPPER=stepper_z Distance=12 Velocity=5
    G1 X125 Z1 F1000
    M117 Home all...
    G28 Z
    M117 Tramming Done

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  ERCF_EJECT
  TURN_OFF_HEATERS
  M106 S0
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 20.0) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 5.0) %}
      {% set z_safe = 5.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G92 E0
  G1 E-1.0 F1500.0
  G90
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% if printer["gcode_macro _ERCF_PAUSE"].is_paused|int != 0 %}
        M118 You can't resume the print without unlocking the ERCF first.
        M118 Run ERCF_UNLOCK and solve any issue before hitting Resume again
    {% else %}
        RESTORE_GCODE_STATE NAME=PAUSE_state
        G90
        {% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
            SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
        {% endif %}
        BASE_RESUME
    {% endif %}
